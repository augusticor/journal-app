# This workflow will do a clean installation of node dependencies and run tests across different versions of node

name: Journal App CI

on:
  push:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest
    environment: TEST

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm install --include=dev
    - name: Test project
      run: npm test
      env:
        # Firebase environment variables
        REACT_APP_APIKEY: ${{ secrets.REACT_APP_APIKEY }}
        REACT_APP_AUTHDOMAIN: ${{ secrets.REACT_APP_AUTHDOMAIN }}
        REACT_APP_PROJECTID: ${{ secrets.REACT_APP_PROJECTID }}
        REACT_APP_STORAGEBUCKET: ${{ secrets.REACT_APP_STORAGEBUCKET }}
        REACT_APP_MESSAGINGSENDERID: ${{ secrets.REACT_APP_MESSAGINGSENDERID }}
        REACT_APP_APPID: ${{ secrets.REACT_APP_APPID }}
        # Cloudinary environment variables:
        REACT_APP_CLOUD_NAME: ${{ secrets.REACT_APP_CLOUD_NAME }}
        REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
        REACT_APP_API_SECRET: ${{ secrets.REACT_APP_API_SECRET }}
        REACT_APP_SECURE: ${{ secrets.REACT_APP_SECURE }}
        REACT_APP_CLOUDINARYURL: ${{ secrets.REACT_APP_CLOUDINARYURL }}
    
  # Development environment
  development:

    runs-on: ubuntu-latest
    environment: DEV
    needs: [test]
    env:
      # Cloudinary dev environment variables
      REACT_APP_CLOUDINARYURL: ${{ secrets.REACT_APP_CLOUDINARYURL }}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm install
